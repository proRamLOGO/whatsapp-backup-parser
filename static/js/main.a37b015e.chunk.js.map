{"version":3,"sources":["assets/background.png","assets/bgimagedark.jpeg","utils/makeMessages.js","assets/darkSentPin.svg","assets/darkReceivedPin.svg","assets/lightSentPin.svg","assets/lightReceivedPin.svg","views/components/chatroom/Message.js","assets/bgimagelight.jpeg","assets/unknownGroup.svg","assets/unknownPerson.svg","assets/lightModeIcon.svg","assets/darkModeIcon.svg","assets/infoIcon.svg","assets/screenShotIcon.svg","assets/enableFullScreenIcon.svg","assets/disableFullScreenIcon.svg","views/components/chatroom/index.js","utils/saveAs.js","utils/requestFullScreen.js","assets/icon.png","assets/githubIcon.svg","views/components/AuthorModal.js","utils/sampleChat.txt","views/pages/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["datify","dateStr","day","parseInt","substring","month","year","time","length","inc","hr","min","ms","Date","makeMessages","text","arr","authors","Set","messages","matchAll","message","push","index","messagesArr","i","idx","indexOf","senderValue","add","thisMessageDay","timestamp","messageBody","sendersName","Array","from","processMessage","partsOfMessage","replace","url","split","processedMessage","processedMessagePart","totalBolds","totalItalics","totalStrikes","ch","boldCount","italicCount","strikeCount","Message","content","sender","theme","styles","display","justifyContent","padding","margin","textAlign","backgroundColor","borderRadius","boxShadow","color","fontSize","flexDirection","alignItems","marginBottom","maxWidth","width","wordWrap","fontWeight","textDecoration","Banner","className","style","bannerContainer","banner","classOfMsg","src","lightSentPin","lightReceivedPin","darkSentPin","darkReceivedPin","alt","senderName","lineHeight","parse","toLocaleString","hour","minute","hour12","ChatRoom","setModalState","messagesEndRef","useRef","useState","setTheme","fullScreen","setFullScreen","useEffect","current","scrollIntoView","behavior","scrollToBottom","backgroundImage","chatBackgroundImageLightTheme","chatBackgroundImageDarkTheme","backgroundRepeat","backgroundSize","height","overflow","fontFamily","paddingTop","borderBottom","zIndex","paddingRight","border","marginRight","cursor","borderColor","marginLeft","id","chatBar","profileGroup","profileButton","onClick","data-tip","data-for","chatIcon","unknownGroupIcon","place","effect","type","h4","utilityButtons","utilityButton","utilityButtonIcon","screenShotIcon","data","document","getElementById","html2canvas","scrollY","offsetTop","then","canvas","blob","fileName","elem","window","createElement","href","download","body","documentElement","appendChild","click","target","dispatchEvent","MouseEvent","view","bubbles","cancelable","URL","revokeObjectURL","remove","saveAs","toDataURL","enableFullScreenIcon","disableFullScreenIcon","doc","docEl","requestFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancelFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","call","lightModeIcon","darkModeIcon","infoIcon","chatRoom","map","messageNo","ref","AuthorModal","authorsList","setSenderName","modalState","onCloseModal","appearence","marginTop","open","onClose","center","closeOnEsc","forModal","div","onChange","e","value","select","author","key","okButton","minHeight","backgroundImg","top","footerBackgroundImg","paddingLeft","paddingBottom","Home","messagesCollection","setMessagesCollection","setAuthorsList","header","headerContent","appIcon","icon","headerText","p","fileUploadSection","uploadButton","preventDefault","reader","FileReader","onload","a","result","scrollTo","scrollHeight","readAsText","files","err","alert","placeholder","visibility","uploadHelpText","sampleChatFile","sampleFileLink","privacyText","appView","footer","footerDiv","githubIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a37b015e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.21544187.png\";","export default __webpack_public_path__ + \"static/media/bgimagedark.0d75d268.jpeg\";","function datify( dateStr ) {\n  \n  // [08/06/19, 10:38:42 PM] Date Example\n  let day = parseInt(dateStr.substring(1,3));\n  let month = parseInt(dateStr.substring(4,6));\n  let year = 2000 + parseInt(dateStr.substring(7,9));\n  \n  let time = dateStr.substring(11,dateStr.length-1);  \n  let inc = (time[1]!==':');\n  let hr = parseInt(time.substring(0,1+inc));\n  let min = parseInt(time.substring(2+inc,4+inc));\n  let ms = parseInt(time.substring(5+inc,7+inc));\n\n  if ( time[time.length-2] === 'P' )\n    hr += 12; \n\n  return new Date(year,month,day,hr,min,ms);\n\n}\n\nexport function makeMessages( text ) {\n\n  const regex = /\\[(\\d+\\/\\d+\\/\\d+)(,)(\\s)(\\d+:\\d+:\\d+)(\\s)(\\w+)\\]/g ;\n  let arr = [];\n  let authors = new Set(['Select a Sender']);\n  const messages = text.matchAll(regex);\n  \n  for ( const message of messages ) {\n    arr.push(\n      [ message[0], message.index, message.index+message[0].length ]\n    );\n  }\n  arr.push([\"\",text.length,0]);\n  let messagesArr = [];\n\n  let day = new Date();\n\n  for ( var i = 1 ; i<arr.length ; ++i ) {\n    let message = text.substring(arr[i-1][2],arr[i][1]);\n    let idx = message.indexOf(\":\");\n    let senderValue = false;\n    if ( idx!==-1 ) {\n      senderValue = message.substring(1,idx);\n      authors.add(senderValue);\n      message = message.substring(idx+2);\n    }\n    \n    // ADD DATE BAENNER\n    let thisMessageDay = arr[i-1][0].substring(1,9);\n    if ( thisMessageDay !== day ) {\n      messagesArr.push({ timestamp: thisMessageDay,\n        messageBody: thisMessageDay,\n        sendersName: false\n      });\n      day = thisMessageDay;\n    }\n\n    messagesArr.push({ timestamp: datify(arr[i-1][0]), \n      messageBody: message,\n      sendersName: senderValue\n    });\n  }\n\n  return [Array.from(authors), messagesArr];\n\n}\n","export default __webpack_public_path__ + \"static/media/darkSentPin.bea17d1d.svg\";","export default __webpack_public_path__ + \"static/media/darkReceivedPin.120e8946.svg\";","export default __webpack_public_path__ + \"static/media/lightSentPin.2421c4b6.svg\";","export default __webpack_public_path__ + \"static/media/lightReceivedPin.815f70a9.svg\";","import {React} from 'react' ;\nimport darkSentPin from '../../../assets/darkSentPin.svg';\nimport darkReceivedPin from '../../../assets/darkReceivedPin.svg';\nimport lightSentPin from '../../../assets/lightSentPin.svg';\nimport lightReceivedPin from '../../../assets/lightReceivedPin.svg';\nimport parse from 'html-react-parser';\n\nfunction processMessage(message) {\n    // return message;\n    // The function will \n    // 1. Split message acc to line breaks\n    // 2. Detect for links\n    // 3. Add bold(<b></b>), italic(<i></i>) and strikethrough(<s></s>) tags in between the message at respective places. By watching '*'s, '_'s and '~' respectively.\n\n    // URLs PROCESSED\n    var urlRegex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/gm;\n    message = message.replace(urlRegex, url => '<a style=\"text-decoration: none; color: #039BE5;\" href=\"' + url + '\" target=\"_blank\" rel=\"noopener noreferrer\" >' + url + '</a>') ;\n\n    // MESSAGE SPLITTED ON BASIS OF NEW LINES/LINE BREAKS\n    const partsOfMessage = message.split(/\\r\\n|\\n|\\r/);\n    \n    // PROCESSING BOLD, ITALIC AND STRIKETHROUGH\n    let processedMessage = '';\n    for ( var i = 0 ; i < partsOfMessage.length ; ++i ) { \n        \n        let processedMessagePart = '';\n        let totalBolds=0, totalItalics=0, totalStrikes=0;\n        for ( const ch of partsOfMessage[i] ) {\n            if ( ch==='*')\n                ++totalBolds;\n            else if ( ch==='_')\n                ++totalItalics;\n            else if ( ch==='~')\n                ++totalStrikes;\n        }\n\n        let boldCount=0, italicCount=0, strikeCount=0;\n        for ( const ch of partsOfMessage[i] ) {\n            \n            if ( ch==='*') {\n                if ( (totalBolds&1)===1 && boldCount===totalBolds-1 )\n                    continue;\n                processedMessagePart += ( (boldCount&1)===0 ) ? '<b>' : '</b>';\n                ++boldCount;\n            }\n            else if ( ch==='_') {\n                if ( (totalItalics&1)===1 && italicCount===totalItalics-1 )\n                    continue;\n                processedMessagePart += ( (italicCount&1)===0 ) ? '<i>' : '</i>';\n                ++italicCount;\n            }\n            else if ( ch==='~') {\n                if ( (totalStrikes&1)===1 && strikeCount===totalStrikes-1 )\n                    continue;\n                processedMessagePart += ( (strikeCount&1)===0 ) ? '<s>' : '</s>';\n                ++strikeCount;\n            } else {\n                processedMessagePart += ch;\n            }\n        }\n        processedMessage += processedMessagePart + ((i<=(partsOfMessage.length-2))?'<br/>':'');\n    }\n    \n    return processedMessage;\n}\n\nfunction Message( {content, sender, theme} ) {\n\n    const styles = {\n\n        'bannerContainer' : {\n            display: 'flex',\n            justifyContent: 'center',\n        },\n    \n        'banner' : {\n            padding: '5px 12px 6px',\n            margin: '6px',\n            textAlign: 'center',\n            backgroundColor: (theme==='light')?'#E1F3FB':'#1E2A30',\n            borderRadius: 7.5,\n            boxShadow: '0 1px 0.5px rgba(0,0,0,.15)',\n            color: (theme==='light')?'#1D1E1F':'#FFF',\n            fontSize: 12,\n        },\n        \n        'messageBodyreceived' : {\n            padding : '0px 52px 0px 52px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'start',\n            color: (theme==='light')?'#000':'#FFF',\n        },\n    \n        'messageBodysent' : {\n            padding : '0px 52px 0px 52px',\n            display: 'flex',\n            flexDirection: 'row-reverse',\n            alignItems: 'start',\n            color: (theme==='light')?'#000':'#FFF',\n        },\n    \n        'sent' : {\n            padding: '6px 7px 1px 9px',\n            marginBottom: 5,\n            maxWidth: '60%',\n            backgroundColor: (theme==='light')?'#DCF8C6':'#056162',\n            borderRadius: '7.5px 0px 7.5px 7.5px',\n            fontSize: 14,\n            boxShadow: '0 1px .5px rgba(0,0,0,.13)',\n            width: 'fit-content',\n            wordWrap: 'break-word',\n        },\n    \n        'received' : {\n            padding: '6px 7px 0px 9px',\n            marginBottom: 5,\n            maxWidth: '60%',\n            backgroundColor: (theme==='light')?'#FFF':'#262D31',\n            borderRadius: '0px 7.5px 7.5px 7.5px',\n            boxShadow: '0 1px .5px rgba(0,0,0,.13)',\n            fontSize: 14,\n            width: 'fit-content',\n            wordWrap: 'break-word',\n        },\n    \n        'time' : {\n            textAlign: 'right',\n            fontSize: 11,\n            fontWeight: '500',\n            color: (theme==='light')?'#8C8C8C':'#9CBCBD',\n        },\n    \n        'senderName' : {\n            fontSize: 12.8,\n            fontWeight: 'bold',\n            margin: '0px 0px 5px -2px',\n            padding: '0px 0px 5px 2px',\n        }, \n    \n        'a' : {\n            textDecoration: 'none',\n            color: '#039BE5',\n        },\n    \n    };\n\n\n    function Banner( {content} ) {\n        return (\n            <div className={\"banner\"} style={styles.bannerContainer} >\n                <p className={\"banner__content\"} style={styles.banner} >{content}</p>\n            </div>\n        );\n    }\n\n\n    let classOfMsg = \"banner\";\n    \n    if ( content.sendersName!==false ){\n        if (content.sendersName===sender ) {\n            classOfMsg = \"sent\";\n        } else {\n            classOfMsg = \"received\";\n        }\n    }\n\n    if ( classOfMsg===\"banner\" ) {\n        return (\n            <Banner content={content.messageBody} />\n        )\n    } else {\n        return (<>\n            \n            <div style={styles['messageBody'+classOfMsg]} >\n                \n                <img src={(theme==='light')? ((classOfMsg==='sent')?lightSentPin:lightReceivedPin) : ((classOfMsg==='sent')?darkSentPin:darkReceivedPin)} \n                alt={'msgpin'} />\n\n                <div className={classOfMsg} style={styles[classOfMsg]} >\n                    <p className={\"sender\"} style={styles.senderName} >{content.sendersName}</p>\n                    <div className={\"contentOfMessage\"} style={{width: 'fit-content', wordWrap: 'break-word', lineHeight: '19px'}} >\n                        {parse(processMessage(content.messageBody))}\n                    </div>\n                    \n                    {  \n                    (classOfMsg!==\"banner\")?\n                    <p style={styles.time} >{content.timestamp.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })}</p>\n                    :<></>\n                    }\n\n                </div>\n                \n            </div>\n        </>)\n    }\n\n    // sent,\n    // received,\n    // banner\n\n}\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/bgimagelight.ed673d52.jpeg\";","export default __webpack_public_path__ + \"static/media/unknownGroup.be341f2d.svg\";","export default __webpack_public_path__ + \"static/media/unknownPerson.d3441b18.svg\";","export default __webpack_public_path__ + \"static/media/lightModeIcon.a406a237.svg\";","export default __webpack_public_path__ + \"static/media/darkModeIcon.f4c2a235.svg\";","export default __webpack_public_path__ + \"static/media/infoIcon.c296ef03.svg\";","export default __webpack_public_path__ + \"static/media/screenShotIcon.cd294823.svg\";","export default __webpack_public_path__ + \"static/media/enableFullScreenIcon.7b25107c.svg\";","export default __webpack_public_path__ + \"static/media/disableFullScreenIcon.5bfd39d3.svg\";","import React, { useState, useEffect, useRef } from 'react'\n\nimport html2canvas from 'html2canvas';\nimport ReactTooltip from 'react-tooltip';\n\nimport Message from '../../components/chatroom/Message';\nimport '../../../styles/App.css';\nimport {requestFullScreen} from '../../../utils/requestFullScreen.js';\nimport {saveAs} from '../../../utils/saveAs';\n\nimport chatBackgroundImageLightTheme from '../../../assets/bgimagelight.jpeg';\nimport chatBackgroundImageDarkTheme from '../../../assets/bgimagedark.jpeg';\nimport unknownPersonIcon from '../../../assets/unknownPerson.svg';\nimport unknownGroupIcon from '../../../assets/unknownGroup.svg';\nimport lightModeIcon from '../../../assets/lightModeIcon.svg';\nimport darkModeIcon from '../../../assets/darkModeIcon.svg';\nimport infoIcon from '../../../assets/infoIcon.svg';\nimport screenShotIcon from '../../../assets/screenShotIcon.svg'\nimport enableFullScreenIcon from '../../../assets/enableFullScreenIcon.svg';\nimport disableFullScreenIcon from '../../../assets/disableFullScreenIcon.svg';\n\nfunction ChatRoom( {content, sender, setModalState} ) {\n\n    const messagesEndRef = useRef(null);\n    const [theme, setTheme] = useState('light');\n    const [fullScreen, setFullScreen] = useState('disabled');\n\n    const scrollToBottom = () => messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  \n    const toggleTheme = () => setTheme((theme==='dark')?'light':'dark');\n    const toggleFullScreen = () => {\n        setFullScreen((fullScreen==='disabled')?'enabled':'disabled');\n        requestFullScreen(fullScreen);\n    };\n\n    const takeScreenShot = () => {\n        var data = document.getElementById('chatRoom')\n        html2canvas(data, {scrollY: -(-50+document.getElementById('chatHeader').offsetTop) }).then((canvas)=>{\n          var image = canvas.toDataURL('image/png', 1.0);\n          saveAs(image, \"Whatsapp Chat Screenshot\")\n        })\n    }\n\n    useEffect(() => {\n      scrollToBottom()\n    }, [fullScreen]);\n  \n    const styles = {\n        'chatRoom': {\n            backgroundImage: `url(${(theme==='light')?chatBackgroundImageLightTheme:chatBackgroundImageDarkTheme})`,\n            backgroundRepeat: 'repeat',\n            backgroundSize: '200px 400px',\n            height: (fullScreen==='enabled')?'92vh':'80vh',\n            width: (fullScreen==='enabled')?'100vw':'90vw',\n            // maxWidth: '90vw',\n            overflow: 'scroll',\n            fontFamily: '-apple-system, BlinkMacSystemFont, Helvetica Neue',\n            paddingTop: 10,\n            display: 'block',\n        },\n        'chatBar' : {\n            width: (fullScreen==='enabled')?'100vw':'90vw',\n            height: '7vh',\n            display: 'flex',\n            flexDirection: 'row',\n            backgroundColor: (theme==='light')?'#EDEDED':'#2A2F32',\n            justifyContent: 'space-between',\n            color: (theme==='light')?'#000':'#FFF',\n            borderBottom: (theme==='light')?'1px solid rgba(0,0,0,0.1)':'none',\n            boxShadow: (theme==='light')?'none':'0px 1px 3px rgba(0,0,0,0.4)',\n            zIndex: 1,\n        },\n        'chatIcon' : {\n            height: 40,\n        },\n        'profileGroup' : {\n            // backgroundColor: 'yellow',\n            width: '90%',\n            display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'row',\n        },\n        'h4' : {\n            fontSize: 16,\n            fontWeight: '500',\n        },\n        'utilityButtons' : {\n            // backgroundColor: 'green',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            width: '20%',\n            paddingRight: 10,\n        },\n        'utilityButton' : {\n            backgroundColor: 'transparent',\n            border: 'none',\n            marginRight: 10,\n            height: 50,\n            width: 50,\n            borderRadius: 50,\n        },\n        'utilityButtonIcon' : {\n            cursor: 'pointer',\n            height: 24,\n        },\n        'profileButton' : {\n            backgroundColor: 'transparent',\n            borderColor: 'transparent',\n            borderRadius: 30,\n            marginLeft: '20px',\n            width: 60,\n            cursor: 'pointer',\n        }\n    }\n\n    return ( \n    \n        <div id={'chatRoom'} className={(fullScreen==='enabled')?'fullscreen':''}\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n            >\n            \n            <div style={styles.chatBar} id={'chatHeader'} >\n                <div style={styles.profileGroup}>\n                    \n                    <button style={styles.profileButton} onClick={() => setModalState(true)} >\n                        <img data-tip data-for={\"profileButtonToolTip\"} style={styles.chatIcon} src={unknownGroupIcon} alt={'Chat Icon'} />\n                        <ReactTooltip id={'profileButtonToolTip'} place={'bottom'} effect={'solid'} type={(theme==='light')?'dark':'light'}>Set Sender</ReactTooltip>\n                    </button>\n                    \n                    <h4 style={styles.h4} >Whatsapp Chat</h4>\n                </div>\n                <div style={styles.utilityButtons} >\n                    <button style={styles.utilityButton} className={\"ripple\"} >\n                        <img data-tip data-for={\"screenshotButtonToolTip\"} style={styles.utilityButtonIcon} src={screenShotIcon} onClick={takeScreenShot}  alt={'ScreenShot Button'}/>\n                        <ReactTooltip id={'screenshotButtonToolTip'} place={'bottom'} effect={'solid'} type={(theme==='light')?'dark':'light'}>Take ScreenShot</ReactTooltip>\n                    </button>\n\n                    <button style={styles.utilityButton} className={\"ripple\"} >\n                        <img data-tip data-for={\"screenSizeButtonToolTip\"} style={styles.utilityButtonIcon} src={(fullScreen==='disabled')?enableFullScreenIcon:disableFullScreenIcon} onClick={toggleFullScreen}  alt={'FullScreen Button'}/>\n                        <ReactTooltip id={'screenSizeButtonToolTip'} place={'bottom'} effect={'solid'} type={(theme==='light')?'dark':'light'}>{(fullScreen==='disabled')?'Enter FullScreen':'Exit Fullscreen'}</ReactTooltip>\n                    </button>\n                \n                    <button style={styles.utilityButton} className={\"ripple\"} >\n                        <img data-tip data-for={\"themeButtonToolTip\"} style={styles.utilityButtonIcon} src={(theme==='light')?lightModeIcon:darkModeIcon} onClick={toggleTheme}  alt={'Toggle Theme Button'}/>\n                        <ReactTooltip id={'themeButtonToolTip'} place={'bottom'} effect={'solid'} type={(theme==='light')?'dark':'light'}>{(theme==='light')?'Dark Mode':'Light Mode'}</ReactTooltip>\n                    </button>\n                \n                    <button style={styles.utilityButton} className={\"ripple\"} >\n                        <img data-tip data-for={\"infoButtonToolTip\"} style={styles.utilityButtonIcon} src={infoIcon}  alt={'Info Button'}/>\n                        <ReactTooltip id={'infoButtonToolTip'} place={'bottom'} effect={'solid'} type={(theme==='light')?'dark':'light'}>Chat Info</ReactTooltip>\n                    </button>\n                \n                </div>\n            </div>\n\n            <div className=\"chatRoom\" style={styles.chatRoom} >\n            {\n                content.map( (message, messageNo) => {\n                return(\n                    <Message content={message} sender={sender} theme={theme} key={'Message' + messageNo}/>\n                )\n                } )\n            }\n            <div ref={messagesEndRef}></div>\n            </div>\n            \n            {/* Search in Chatroom */}\n            {/* <div style={styles.searchBar} >\n                <input type={\"text\"} style={styles.serachBarTecHolder} ></input>\n            </div> */}\n        </div>\n\n    )\n}\n\nexport default ChatRoom ;\n","export function saveAs(blob, fileName) {\n    var elem = window.document.createElement('a');\n    elem.href = blob\n    elem.download = fileName;\n    elem.style = 'display:none;';\n    (document.body || document.documentElement).appendChild(elem);\n    if (typeof elem.click === 'function') {\n        elem.click();\n    } else {\n        elem.target = '_blank';\n        elem.dispatchEvent(new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n        }));\n    }\n    URL.revokeObjectURL(elem.href);\n    elem.remove();\n}\n","export function requestFullScreen( fullScreen ) {\n\n    var doc = window.document;\n    var docEl = doc.documentElement;      \n    var requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\n    var cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\n\n    if (fullScreen==='enabled') {\n        cancelFullScreen.call(doc);\n    } else {\n        requestFullScreen.call(docEl);\n    }\n\n    return true;\n\n}\n","export default __webpack_public_path__ + \"static/media/icon.f99de59b.png\";","export default __webpack_public_path__ + \"static/media/githubIcon.79edf289.svg\";","import {React, useEffect} from 'react' ;\nimport {Modal} from 'react-responsive-modal';\nimport 'react-responsive-modal/styles.css';\n\nexport default function AuthorModal({authorsList, setSenderName, modalState, setModalState}) {\n\n    const onCloseModal = () => setModalState(false);\n    const onOpenModal = () => setModalState(true);\n\n    const handleSelect = (e) => setSenderName(e.target.value);\n    \n    useEffect(() => {\n        if (authorsList.length > 1) {\n            onOpenModal();\n        }\n    },[authorsList]);\n\n    const styles = {\n        'forModal' : {\n            'modal' : {\n                borderRadius: '4px',\n                maxWidth: '30vw',\n            },\n        },\n        'div' : {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            lineHeight: '21px',\n        },\n        'select' : {\n            margin: '10px 0 10px 0',\n            backgroundColor: '#EEE',\n            borderRadius: '2px',\n            height: '5vh',\n            border: 'none',\n            padding: '0 5px 0 5px',\n            appearence: 'none',\n            fontSize: '18px',\n        },\n        'okButton' : {\n            backgroundColor: '#00565A',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: 7,\n            // width: 140,\n            height: 45,\n            color: '#fff',\n            cursor: 'pointer',\n            fontSize: 18,\n            marginTop: 20,\n        }\n    };\n\n    return (\n        <Modal open={modalState} onClose={onCloseModal} center closeOnEsc styles={styles.forModal} >\n            <div style={styles.div} >\n                <h3>Select a sender please!</h3>\n                <p>\n                    Please select the sender for this conversation from the below list of participants.\n                    You can change the sender anytime for a conversation by clicking on the profile icon on the top right of chatroom.\n                    Messages sent by this person will appear to the right side.\n                </p>\n                <select onChange={handleSelect} style={styles.select}>\n                    {authorsList.map( (author, key) => {\n                        return <option value={author} key={key}>{author}</option>\n                    })}\n                </select>\n                <button onClick={onCloseModal} style={styles.okButton} >See My Chats</button>\n            </div>\n        </Modal>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/sampleChat.c9282040.txt\";","import {React, useState} from 'react' ;\nimport backgroundImg from '../../../assets/background.png';\nimport footerBackgroundImg from '../../../assets/bgimagedark.jpeg';\nimport {makeMessages} from '../../../utils/makeMessages';\nimport ChatRoom from '../../components/chatroom/' ;\nimport appIcon from '../../../assets/icon.png';\nimport githubIcon from '../../../assets/githubIcon.svg';\nimport AuthorModal from '../../components/AuthorModal';\nimport '../../../styles/App.css';\nimport sampleChatFile from '../../../utils/sampleChat.txt';\n\nconst styles = {\n    'header' : { \n        minHeight: '65vh', \n        backgroundImage: `url(${backgroundImg})`,\n        color: '#fff',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    'headerContent' : { \n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        marginTop: 100,\n    },\n    'icon' :{\n        height: 164,\n    },\n    'headerText' : {\n        fontFamily: \"'Poppins', 'sans-serif'\",\n        fontSize: 48,\n        textAlign: 'center',\n    },\n    'p' : {\n        fontSize: 20, \n        padding: '0px 100px 0px 100px',\n        lineHeight: '30px',\n        textAlign: 'center',\n    },\n    'fileUploadSection' : {\n        top: 0, \n        height: '35vh',\n        backgroundColor: '#EDFFEB',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        fontFamily: \"'Roboto', 'sans-serif'\",\n    },\n    'h4' : {\n        marginTop: 20,\n        top: 0,\n        fontSize: 20,\n        fontWeight: 'normal',\n    }, \n    'uploadButton' : {\n        backgroundColor: '#00565A',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 7,\n        width: 230,\n        height: 45,\n        color: '#fff',\n        cursor: 'pointer',\n        fontSize: 18,\n        marginTop: 0,\n    },\n    'uploadHelpText' : {\n        fontSize: 20,\n        fontFamily: \"'Roboto', 'sans-serif'\",\n        textAlign: 'center',\n    },\n    'sampleFileLink' : {\n        textDecoration: 'none',\n        color: '#00565A',\n        borderBottom: '1px dotted #00565A',\n    },\n\n    'appView' : { \n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    'footer' : {\n        fontFamily: \"'Poppins', 'sans-serif'\",\n        fontSize: 27,\n        width: '100vw',\n        height: '10vh',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundImage: `url(${footerBackgroundImg})`,\n        color: '#FFF',\n        fontWeight: 'bold',\n        boxShadow: 'rgba(0, 0, 0, 0.4) 0px 1px 3px',\n    },\n    'footerDiv' : {\n        paddingLeft: '4vw',\n        width: '100vw',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    'githubIcon' : {\n        zIndex: 1,\n        height: '6vh',\n        marginTop: 'auto',\n        marginLeft: 'auto',\n        marginRight: '10px',\n        marginBottom: '-10px',\n    },\n    'privacyText' : {\n        color: '#0A0908',\n        backgroundColor: '#FDF4C3',\n        padding: '10px 10px 10px 10px',\n        width: '80vw',\n        textAlign: 'center',\n        paddingBottom: '-40px',\n        borderRadius: 8,\n        boxShadow: 'rgb(0 0 0 / 20%) 0px 1px 3px',\n    }\n\n};\n\nfunction Home() {\n\n    const [messagesCollection,setMessagesCollection] = useState([]);\n    const [authorsList,setAuthorsList] = useState([]);\n    const [senderName,setSenderName] = useState(\"\");\n    const [modalState,setModalState] = useState(false);\n\n    function handleFileInput(e) {\n        // Reads a file and generates messages collection.\n        setSenderName('');\n        e.preventDefault();\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const [authors, messages] = makeMessages(e.target.result);\n            setAuthorsList(authors);\n            setMessagesCollection(messages);\n            if (authors.length>1) {\n                setModalState(true);\n                window.scrollTo(0,document.body.scrollHeight-900);\n                // document.getElementById('chatRoomSection').scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n        try {\n            reader.readAsText(e.target.files[0]);\n        } catch (err) {\n            alert(\"No file selected!\");\n        }\n    }\n\n    return (\n        <>\n\n            <AuthorModal setSenderName={setSenderName} authorsList={authorsList} modalState={modalState} setModalState={setModalState} />\n\n            {/* <nav>\n                NAVBAR\n            </nav>         */}\n            <header style={styles.header}> \n                <div style={styles.headerContent}>\n                    <img id={\"icon\"} src={appIcon} style={styles.icon} alt={'icon'} ></img>\n                    <h1 style={styles.headerText} >Whatapp Backup Parser</h1>\n                    <p style={styles.p} >Now browse through your old exported Whatsapp Chat text files conviniently as if they were right in your Whatsapp!</p>\n                </div>\n            </header>    \n\n            <section id={'fileUploadSection'} style={styles.fileUploadSection} > \n                \n                <h4 style={styles.h4} >Try Now</h4>\n\n                <label style={styles.uploadButton} >\n                    Choose File\n                    <input onChange={handleFileInput} type={\"file\"} placeholder={\"\"} style={{visibility: 'hidden',display: 'none'}} ></input>\n                </label>\n                \n                <p style={styles.uploadHelpText} >\n                \n                    Upload a valid Whatsapp Chat Backup txt file or try uploading&nbsp;\n                    <a href={sampleChatFile} download={'Sample Whatsapp Exported Chat'} style={styles.sampleFileLink} >\n                        this file.\n                    </a>\n                </p>\n                \n                <p style={styles.privacyText} >\n                    🔒 : Your Chats are absolutely safe. We do not retain your messages in the ordinary course of providing the service to you. Instead, your messages are stored on your device and not on any server.\n                </p>\n\n            </section>\n\n            { (messagesCollection.length!==0) ?\n            <section style={styles.appView} id={'chatRoomSection'} >\n                <ChatRoom content={messagesCollection} sender={senderName} setModalState={setModalState} />\n            </section> \n            : <></>\n            }\n\n            <footer style={styles.footer} >\n                <div style={styles.footerDiv} >\n                    Made by&nbsp;<a href='http://proramlogo.github.io/' className={'footerLink'} >Shubh Bansal</a>\n                </div>\n                <a href='https://github.com/proRamLOGO/whatsapp-backup-parser'><img src={githubIcon} style={styles.githubIcon} /></a>\n            </footer>\n\n        </>\n    )\n}\n\nexport default Home\n\n// backgroundImage: 'url(\"../../../assets/background.png\")'","import React from 'react' ;\nimport './styles/App.css';\nimport Home from './views/pages/Home';\n\nfunction App() {\n\n  return (\n    <>\n      <Home />\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}